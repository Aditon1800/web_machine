// Gradients

.linearGradient(@start, @end) {
  background-image: -moz-linear-gradient(top, @start 0%, @end 100%);
  background-image: -webkit-linear-gradient(top, @start 0%,@end 100%);
  background-image: linear-gradient(to bottom, @start 0%,@end 100%);
  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='@{start}', endColorstr='@{end}',GradientType=0 );
}

.bgData(@repeat: no-repeat, @position: center, @bgSize: cover) {
  background-repeat: @repeat;
  background-position: @position;
  -webkit-background-size: @bgSize;
  background-size: @bgSize;
}

// Flex properties

.flex() {
  display: -moz-flex;
  display: -ms-flex;
  display: -o-flex;
  display: flex;
}

.flexDirection(@params) {
  -webkit-flex-direction: @params;
  -moz-flex-direction: @params;
  -ms-flex-direction: @params;
  -o-flex-direction: @params;
  flex-direction: @params;
}

.flexWrap(@params) {
  -webkit-flex-wrap: @params;
  -moz-flex-wrap: @params;
  -ms-flex-wrap: @params;
  -o-flex-wrap: @params;
  flex-wrap: @params;
}

.alignItems(@params) {
  -ms-align-items: @params;
  align-items: @params;
}

.alignSelf(@params) {
  -ms-align-self: @params;
  align-self: @params;
}

// Pseudo elem
.pseudo(@content: '', ) {
  position: absolute;
  content: @content;
  display: block;
}

// Transition
.transition(@props: all .3s) {
  transition: @props;
}

// Transform
.transform(@params) {
  -webkit-transform: @params;
  -ms-transform: @params;
  -o-transform: @params;
  transform: @params;
}

// Placeholder
.placeholder(@color: inherit) {
  &::-webkit-input-placeholder {
    color: @color;
  }

  &::-moz-placeholder {
    color: @color;
  }

  &:-ms-input-placeholder {
    color: @color;
  }

  &:-moz-placeholder {
    color: @color;
  }

  &::-placeholder {
    color: @color;
  }
}